<?php
/**
* @file
* Remove Duplicate Nodes.
*/

/**
* Delete duplicates from selected content type, based on title. By Robert Douglass.
* @see <a href="http://robshouse.net/blog-post/remove-duplicate-nodes-dedupe-based-title
" title="http://robshouse.net/blog-post/remove-duplicate-nodes-dedupe-based-title
" rel="nofollow">http://robshouse.net/blog-post/remove-duplicate-nodes-dedupe-based-title
</a> */
function nodededupe_cron() {
$prevobj = array();
$result = db_query("SELECT n.nid, n.title, n.created FROM node n
inner join
(SELECT title FROM node
WHERE type in (:types)
GROUP BY title HAVING count(*) > 1) n2
on (n.title like CONCAT(n2.title,'%'))", array(':types' => 'events'));

foreach ($result as $obj) {

if ($obj->title == $prevobj->title || $obj->title == $prevobjPeriod) {
$first = node_load($obj->nid);

if ($first->field_dato['und'][0]['value'] === $sec->field_dato['und'][0]['value']){
if ($first->name == 'Import fra Kultunaut') {
node_delete((int)$obj->nid);
drupal_set_message("Deleted node nid={$obj->nid}, title={$obj->title}, created={$obj->created}");
}
elseif ($sec->name == 'Import fra Kultunaut'){
node_delete((int)$prevobj->nid);
drupal_set_message("Deleted node nid={$prevobj->nid}, title={$prevobj->title}, created={$prevobj->created}");
}

}
}
$prevobj = $obj;
$prevobjPeriod = substr($prevobj->title, 0, -1);
$sec = node_load($prevobj->nid);
}

    $result = db_query("SELECT node.title AS node_title, node.nid AS nid, node.created AS node_created
FROM
{node} node
LEFT JOIN {feeds_item} feeds_item ON node.nid = feeds_item.entity_id AND feeds_item.entity_type = 'node'
WHERE (( (node.status = '1') AND (node.type IN  ('events')) AND (node.title LIKE 'Teatersport med de Klaustrofobiske Kosmonauter.') AND (feeds_item.feed_nid = 'Import fra Kultunaut') ))
ORDER BY node_created DESC", array());
    
    foreach ($result as $row) {
            node_delete($row->nid);

    }
}
